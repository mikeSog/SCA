image: docker:20.10  # To run all jobs in this pipeline, use a latest docker image

services:
  - docker:dind       # To run all jobs in this pipeline, use a docker image which contains a docker daemon running inside (dind - docker in docker). Reference: https://forum.gitlab.com/t/why-services-docker-dind-is-needed-while-already-having-image-docker/43534

stages:
  - build
  - test
  - release
  - preprod
  - integration
  - prod

build:
  stage: build
  image: python:3.6
  before_script:
   - pip3 install --upgrade virtualenv
  script:
   - virtualenv env                       # Create a virtual environment for the python application
   - source env/bin/activate              # Activate the virtual environment
   - pip install -r requirements.txt      # Install the required third party packages as defined in requirements.txt
   - python manage.py check               # Run checks to ensure the application is working fine

test:
  stage: test
  image: python:3.6
  before_script:
   - pip3 install --upgrade virtualenv
  script:
   - virtualenv env
   - source env/bin/activate
   - pip install -r requirements.txt
   - python manage.py test taskManager

nuclei:
  stage: integration
  script:
    - docker pull projectdiscovery/nuclei:v2.9.6
    - docker run --user $(id -u):$(id -g) -w /nuclei -v $(pwd):/nuclei:rw --rm projectdiscovery/nuclei:v2.9.6 -u https://prod-9gws0jmr.lab.practical-devsecops.training -j -o nuclei-output.json
  after_script: 
    - docker rmi projectdiscovery/nuclei:v2.9.6
  artifacts:
    paths: [nuclei-output.json]
    when: always # What does this do?
    expire_in: one week
  allow_failure: true

nuclei2:
  stage: integration
  image: python:3.6
  before_script: 
    - wget https://github.com/projectdiscovery/nuclei/releases/download/v2.9.6/nuclei_2.9.6_linux_amd64.zip
    - unzip nuclei_2.9.6_linux_amd64.zip
    - mv nuclei /usr/local/bin/nuclei
  script: 
    - nuclei -u https://prod-9gws0jmr.lab.practical-devsecops.training -j -o nuclei-output2.json
  artifacts:
    paths: [nuclei-output2.json]
    when: always
    expire_in: one week
  allow_failure: true

nuclei3: 
  stage: integration
  image: golang:latest
  before_script:
    - go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
  script:
    - nuclei -u https://prod-9gws0jmr.lab.practical-devsecops.training -j -o nuclei-output3.json
   artifacts:
    paths: [nuclei-output3.json]
    when: always
    expire_in: one week
  allow_failure: true 